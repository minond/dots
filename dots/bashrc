###############################################################################
# DEFINITIONS ..................................... helper function definitions
# PROMPT ...................................................... prompt settings
# ENV SETTINGS ...................................... settings for the bash env
# VAR SETTINGS ............................................. settings for tools
# SETTINGS ................................. settings for commands/applications
# ALIASES ........................................ anything but aliases go here
# PATHS ...................................................... path var setters
# EXTRA SOURCES .................................. load additional source files
###############################################################################

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

###############################################################################
# $DEFINITIONS
###############################################################################

#=== FUNCTION =================================================================
#        NAME: source?
# DESCRIPTION: loads a file if it exists
# PARAMETER 1: file
#==============================================================================
function source? {
  [ -f "$1" ] && source "$1"
}

#=== FUNCTION =================================================================
#        NAME: path!
# DESCRIPTION: adds a path to the $PATH variable
# PARAMETER 1: dir
#==============================================================================
function path! {
  [ -d "$1" ] && export PATH="$PATH:$1"
}

###############################################################################
# $PROMPT
###############################################################################

ps1_prompt_jobscount() {
  local stopped=$(jobs -sp | wc -l | sed 's/ //g')
  local running=$(jobs -rp | wc -l | sed 's/ //g')
  ((running+stopped)) && echo -n " (${running}r/${stopped}s)"
}

ps1_nice_exit_code() {
  local last_exit="$?"

  # 0   ok
  # 146 sent process to background
  # 141 git less exit
  # 130 manually cancelled (ctrl-c)
  if [ "$last_exit" -eq 0 ] || [ "$last_exit" -eq 146 ] || [ "$last_exit" -eq 141 ] || [ "$last_exit" -eq 130 ]; then
    return
  else
    echo "(error $last_exit) "
  fi
}

if [[ "$TERM" =~ 256color ]]; then
  export PS1='\[\e[1m\]\[\e[31m\]$(ps1_nice_exit_code)\[\e[30m\]\w\[\e[34m\]$(ps1_prompt_jobscount) \[\e[30m\]$\[\e[0m\] '
else
  export PS1='$(ps1_nice_exit_code)\w$(ps1_prompt_jobscount) $ '
fi

###############################################################################
# $ENV SETTINGS
###############################################################################

export EDITOR=vim

export HISTCONTROL=ignoredups:ignorespace
export HISTSIZE=1000
export HISTFILESIZE=2000

# colored output on mac
export CLICOLOR=1
export LSCOLORS=axBxhxDxfxhxhxhxhxcxcx
export LS_COLORS='di=1:fi=0:ln=31:pi=5:so=5:bd=5:cd=5:or=31:mi=0:ex=93:*.rpm=90'

###############################################################################
# $TOOL SETTINGS
###############################################################################

export GO111MODULE=auto
export GOPATH=$HOME/code/go
export GOROOT=$HOME/.gov/go
export GOBIN=$HOME/.gov/bin
export GRADLE_HOME=$HOME/.sdkman/candidates/gradle/current
export LUA_CPATH="$HOME/.luarocks/lib/lua/5.3/?.so;/usr/local/lib/lua/5.3/?.so;/usr/local/lib/lua/5.3/loadall.so;./?.so"
export LUA_PATH="$HOME/.luarocks/share/lua/5.3/?.lua;$HOME/.luarocks/share/lua/5.3/?/init.lua;/usr/local/share/lua/5.3/?.lua;/usr/local/share/lua/5.3/?/init.lua;/usr/local/Cellar/lua/5.3.4_2/libexec/share/lua/5.3/?.lua;/usr/local/lib/lua/5.3/?.lua;/usr/local/lib/lua/5.3/?/init.lua;./?.lua;./?/init.lua"
export LUA_ROCKS=$HOME/.luarocks
export NVM_DIR=$HOME/.nvm
export PGDATA=/usr/local/var/postgres
export SDKMAN_DIR=$HOME/.sdkman
export SMLNJ_HOME=/usr/local/smlnj

###############################################################################
# $SETTINGS
###############################################################################

# vi mode
set -o vi

# append to the history file, don't overwrite it
shopt -s histappend

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
  test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" ||
    eval "$(dircolors -b)"
fi

###############################################################################
# $ALIASES
###############################################################################

source? ~/.bash_aliases
source? ~/.bash_aliases_sys

###############################################################################
# $PATHS
###############################################################################

# Local user-specific binaries trump all others
path! $HOME/.bin

# Vendor paths
path! $HOME/.dots/module/click
path! $HOME/.dots/module/fff
path! $HOME/.dots/module/gov

path! $HOME/.dots/bin

path! $HOME/.pub-cache/bin
path! $HOME/.rvm/bin
path! $HOME/.flutter-lib/bin
path! $HOME/.sdkman/candidates/sbt/current/bin
path! $HOME/.sdkman/candidates/scala/current/bin

path! $GOROOT/bin
path! $GOBIN
path! '/Applications/Racket v6.12/bin/'
path! /usr/local/smlnj/bin

path! /usr/local/sbin

# path! $HOME/.cargo/bin
# path! $GOPATH/src/github.com/uber/go-torch/FlameGraph
# path! $HOME/.sdkman/candidates/ant/current/bin
# path! $HOME/.sdkman/candidates/gradle/current/bin

###############################################################################
# $EXTRA SOURCES
###############################################################################

source? $HOME/.private
source? $HOME/.bashrc_local

# Vendor sources
source? $HOME/.dots/module/z/z.sh

# These following slow down a session's start time and are not often used, so
# they're in a function instead:
load-extras() {
  source? $HOME/.sdkman/bin/sdkman-init.sh
  source? $NVM_DIR/nvm.sh
  source? $HOME/.travis/travis.sh
  source? $HOME/torch/install/bin/torch-activate
  source? /usr/local/bin/virtualenvwrapper.sh
}

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
  . /etc/bash_completion
fi


# ~ Marcos Minond
