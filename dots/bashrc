###############################################################################
# DEFINISTIONS......................................helper function definitions
# PROMPT........................................................prompt settings
# ENV SETTINGS........................................settings for the bash env
# VAR SETTINGS...............................................settings for tools
# SETTINGS...................................settings for commands/applications
# ALIASES..........................................anything but aliases go here
# PATHS........................................................path var setters
# GNU FTW................................................brew install coreutils
# EXTRA SOURCES....................................load additional source files
###############################################################################

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

###############################################################################
# $DEFINISTIONS
###############################################################################

#=== FUNCTION =================================================================
#        NAME: source?
# DESCRIPTION: loads a file if it exists
# PARAMETER 1: file
#==============================================================================
function source? {
    [ -f $1 ] && source $1
}

#=== FUNCTION =================================================================
#        NAME: path!
# DESCRIPTION: adds a path to the $PATH variable
# PARAMETER 1: dir
#==============================================================================
function path! {
    [ -d $1 ] && export PATH="$PATH:$1"
}

###############################################################################
# $PROMPT
###############################################################################

ps1_prompt_jobscount() {
    local stopped=$(jobs -sp | wc -l | sed 's/ //g')
    local running=$(jobs -rp | wc -l | sed 's/ //g')
    ((running+stopped)) && echo -n "(${running}r/${stopped}s) "
}

ps1_nice_exit_code() {
    local last_exit="$?"

    # 0   ok
    # 130 manually cancelled (ctrl-c)
    # 146 sent process to background
    # 146 (git?) less exit
    if [ "$last_exit" -eq 0 ] || [ "$last_exit" -eq 146 ] || [ "$last_exit" -eq 141 ] || [ "$last_exit" -eq 130 ]; then
        # echo "ðŸ‘¾ "
        return
    else
        echo "ðŸ˜¡  "
    fi
}

export PS1='$(ps1_nice_exit_code)\
$(tput setaf 214)$(whoami)$(tput sgr0) \
$(tput setaf 12)@$(tput sgr0) \
$(tput setaf 214)$(hostname)$(tput sgr0) \
$(tput setaf 39)\w$(tput sgr0) \
$(tput setaf 171)$(ps1_prompt_jobscount)$(tput sgr0) \
\n$ '

###############################################################################
# $ENV SETTINGS
###############################################################################

export EDITOR=vim

# don't put duplicate lines in the history. See bash(1) for more options or
# force ignoredups and ignorespace. for setting history length see HISTSIZE and
# HISTFILESIZE in bash(1)
export HISTCONTROL=ignoredups:ignorespace
export HISTSIZE=1000
export HISTFILESIZE=2000

# colored output on mac
export CLICOLOR=1
# http://geoff.greer.fm/lscolors/
# export LSCOLORS='exfxcxdxbxegedabagacad'
# export LS_COLORS='di=34;40:ln=35;40:so=32;40:pi=33;40:ex=31;40:bd=34;46:cd=34;43:su=0;41:sg=0;46:tw=0;42:ow=0;43:'
export LSCOLORS=axBxhxDxfxhxhxhxhxcxcx
export LS_COLORS='di=1:fi=0:ln=31:pi=5:so=5:bd=5:cd=5:or=31:mi=0:ex=93:*.rpm=90'

###############################################################################
# $TOOL SETTINGS
###############################################################################

export ANT_ARGS='-logger org.apache.tools.ant.listener.AnsiColorLogger'
export GOPATH=$HOME/go
export GOROOT=/usr/local/opt/go/libexec
export NODE_PATH=$HOME/.node
export SCALA_HOME=$HOME/scala-2.11.7
export NVM_DIR=$HOME/.nvm
export PGDATA=/usr/local/var/postgres

export PERL5LIB="/home/marcos/perl5/lib/perl5/i686-linux-gnu-thread-multi-64int"
export PERL5LIB="$PERL5LIB:/home/marcos/perl5/lib/perl5"
export PERL_LOCAL_LIB_ROOT="/home/marcos/perl5"
export PERL_MB_OPT="--install_base /home/marcos/perl5"
export PERL_MM_OPT="INSTALL_BASE=/home/marcos/perl5"

export HDF5_DIR="/usr/local/hdf5/"

###############################################################################
# $SETTINGS
###############################################################################

# vi mode
set -o vi

# append to the history file, don't overwrite it
shopt -s histappend

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" ||
        eval "$(dircolors -b)"
fi

###############################################################################
# $ALIASES
###############################################################################

# colors!
alias grep='grep -I --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# some more ls aliases
alias ll='ls -hlF --group-directories-first --color'
alias la='ls -hA  --group-directories-first --color'
alias l='less'
alias g='grep -r'

alias ..='cd ..'
alias cd..='cd ..'
alias tmux='tmux -2'
alias copy='pbcopy'
alias oneline='xargs echo'

# git aliases
alias d='clear; git diff'
alias s='clear; git status'
alias show='clear; git show'
alias save='git stash save'
alias pop='git stash pop'
alias add='git add'
alias c='cync'

# nice to haves
alias swp="find . | grep swp | sed -e 's/.swp//' | sed -e 's/\/\./\//'"
alias unswp='find . | grep swp | xargs rm'
alias server='python -m SimpleHTTPServer'
alias code='iam marcos; cd $HOME/code/github.com/$GITHUB_USER/$2; tmux -2'
alias work='iam domo; cd $HOME/Documents/Domo/Source/$2; tmux -2'

# work specific
alias ldomo="$HOME/code/github.com/DomoApps/domoapps-cli/bin/runner"
alias domo-play='cd /Users/marcosminond/Documents/Domo/Source/DomoWeb/DomoWeb; \
    play run --http.port=19000 -Ddomoweb.use.domovm=true'

alias fresh_chrome='exec open -na "Google Chrome" --args \
    "--user-data-dir=/Users/marcosminond/.freshchrome" --enable-precise-memory-info \
    --js-flags="--nocrankshaft --nouse-ic --expose-gc"'

alias alert='notify-send --urgency=low -i \
    "$([ $? = 0 ] && echo terminal || echo error)" \
    "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

###############################################################################
# $GNU FTW (brew install coreutils)
###############################################################################

command -v gnome-open &> /dev/null && alias open='gnome-open'
command -v gls &> /dev/null && alias ls='gls'

###############################################################################
# $PATHS
###############################################################################

path! $HOME/code/projects/runner/bin
path! $HOME/perl5/bin
path! $HOME/.composer/bin/
path! $HOME/bin/
path! $HOME/.dots/bin
path! $HOME/.dots/vendor/scaffold/scripts
path! /usr/local/heroku/bin
path! /usr/local/go/bin
path! $GOPATH/bin/
path! $SCALA_HOME/bin/
path! $NODE_PATH/bin/
path! $HOME/.rvm/bin
path! $HOME/.cabal/bin
path! $HOME/torch/install/bin
path! $HOME/Applications/play-1.2.7.2

###############################################################################
# $EXTRA SOURCES
###############################################################################

source? $HOME/.private
source? $HOME/.bashrc_local
source? $HOME/.travis/travis.sh
source? $HOME/torch/install/bin/torch-activate
source? $NVM_DIR/nvm.sh

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

# wtf this doesn't persist?
ulimit -n 1024
