"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" LOAD EXTERNALS.................load external resources, start package manager
" VIM SETTINGS..................................vim built in setting overwrites
" PLUGIN SETTINGS.....................................plugin setting overwrites
" FILE TYPE SETTINGS......................file type specific setting overwrites
" MAPPINGS..................................................custom key mappings
" COMMANDS......................................................custom commands
" COLORSCHEME..................................colorscheme and color overwrites
" FUNCTIONS....................................................custom functions
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" $LOAD EXTERNALS
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
execute pathogen#infect()
execute pathogen#incubate()

filetype on
filetype plugin on

Helptags

if filereadable(expand("~/.private.vim"))
  source ~/.private.vim
endif

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" $VIM SETTINGS
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set colorcolumn=80,120                   " http://paul-m-jones.com/archives/276
set cursorline                           " highlight the line cursor is on

set hlsearch                             " highlight all matches
set ignorecase                           " case insensitive searches
set incsearch                            " highlight matches while typing
set showmatch                            " jump to search result
set smartcase                            " case insensitive defaul
set nojoinspaces                         " just one space after a period!

set modeline
set modelines=5

set foldlevel=100                        " no folds below level of 100 at start
set list                                 " display special characters
set listchars=tab:\ \ ,trail:.           " special characters for special char
set ls=2
set nocompatible
set nowrap
set number                               " show line numbers

set numberwidth=4                        " set line numbers section width
set expandtab
set shiftwidth=2                         " shift movement length
set softtabstop=2                        " back character length
set tabstop=2                            " tab character length
set nuw=4                                " make line number column wider
set backspace=indent,eol,start
set matchpairs=<:>,‘:’,(:),{:},[:]

set autoindent                           " copy indent from current line to next
set smartindent                          " block indentation
set splitbelow
set splitright

set hidden                               " best. thing. ever. no buffer closed
set antialias
set t_Co=256
set tags^=./.tags,./.TAGS,.tags,.TAGS
set statusline=%f\ [line:\ %l,\ col:\ %c\ -\ %P\]\ %m\ %r
set signcolumn=yes

set wildignore+=*.so
set wildignore+=*.swp
set wildignore+=*.class
set wildignore+=*/tmp/*
set wildignore+=*/bin/*
set wildignore+=*/node_modules/*
set wildignore+=*/build/*
set wildignore+=*/out/*
set wildignore+=*/target/*
set wildignore+=*/dist/*

set wildmenu

set makeprg=make
set errorformat=%+A\ %#%f\ %#(%l\\\,%c):\ %m,%C%m
set formatoptions-=t                     " disable automatic wrapping of lines

let mapleader = "\<Space>"

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" $PLUGIN SETTINGS
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:ctrlp_max_height = 30
let g:ctrlp_custom_ignore = {
  \ 'dir':  'vendor',
  \ 'file': '\v\.(exe|so|dll)$',
  \ }

let NERDTreeCascadeOpenSingleChildDir = 1
let NERDTreeCaseSensitiveSort = 1
let NERDTreeRespectWildIgnore = 1
let NERDTreeShowHidden = 0
let NERDTreeMinimalUI = 1

let g:gitgutter_sign_added = '-'
let g:gitgutter_sign_modified = '-'
let g:gitgutter_sign_modified_removed = '-'
let g:gitgutter_sign_removed = '-'
let g:gitgutter_sign_removed_first_line = '-'

let g:UltiSnipsExpandTrigger='<tab>'
let g:UltiSnipsJumpForwardTrigger='<c-j>'
let g:UltiSnipsJumpBackwardTrigger='<c-k>'

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" $FILE TYPE SETTINGS
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
augroup Git
  au!
  au BufWritePost * :GitGutterAll
augroup END

augroup CursorLine
  au!
  au WinEnter     * setlocal cursorline
  au WinLeave     * setlocal nocursorline
augroup END

augroup VimReload
  au!
  au BufWritePost $MYVIMRC source $MYVIMRC
augroup END

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" $MAPPINGS
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nnoremap ; :<C-F>i
inoremap jj <Esc>:w<CR><RIGHT>

map <C-k> <ESC>:GitGutterNextHunk<CR>
map <C-j> <ESC>:GitGutterPrevHunk<CR>

map <leader>m <ESC>/=======\\|<<<<<<<\\|>>>>>>><CR>

map <C-o> <ESC>:CtrlP<CR>
map <leader>o <ESC>:CtrlPTag<CR>
map <leader>b <ESC>:CtrlPBuffer<CR>

map <C-c> <ESC>:TComment<CR>
xmap <C-c> <ESC>:'<,'>TComment<CR>

map <leader>f <ESC>:NERDTreeFind<CR>
map <leader><S-f> <ESC>:NERDTreeToggle<CR>

map <C-b> <ESC>:exec('tag '.expand('<cword>'))<CR>
map <C-l> <ESC>:echo synIDattr(synID(line('.'), col('.'), 1), 'name')<CR>

map <S-j> <ESC>:bp<CR>
map <S-k> <ESC>:bn<CR>
map <Tab> <C-w><C-w>
map <S-Tab> <C-w><S-w>

map <leader>p :set paste!<CR>
map <leader>= :NERDTreeClose<CR><C-w><S-_><C-w><S-\|>
map <leader>w :call StripTrailingWhitespaces()<CR>

map <leader>c :Copy<CR><CR>
map <leader><S-c> :CopyFilename<CR><CR>
xmap <leader>c :call CopySelection()<CR>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" $COMMANDS
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
command! Ctags !ctags -R --verbose -f .tags
command! Copy w !cat | pbcopy && echo 'copied to clip board'
command! CopyFilename !echo -n % | pbcopy && echo 'copied filename to clip board'
command! -range=% -nargs=0 C :<line1>,<line2>call CopySelection()
command! Spell setlocal spell! spelllang=en_us

" git commands
command! Ann !clear; git annotate %
command! History !clear; git log -p -- %
command! Add execute ':silent !clear; git add %' | execute ':redraw!' | execute ':GitGutter'
command! AddP execute '!clear; git add -p %' | execute ':GitGutter'
command! -nargs=* Diff !clear; git diff <f-args>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" COLORSCHEME
" http://upload.wikimedia.org/wikipedia/en/1/15/Xterm_256color_chart.svg
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
syntax on

if ! has("gui_running")
  colo simple
endif

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" FUNCTIONS
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
function! ShowColors()
    let num = 255
    while num >= 0
        exec 'hi col_' . num . ' ctermbg=' . num . ' ctermfg=white'
        exec 'syn match col_' . num . ' "ctermbg=' . num . ':...." containedIn=ALL'
        call append(0, 'ctermbg=' . num . ':....')
        let num = num - 1
    endwhile
endfunction

function! CopySelection() range
  echo system('echo ' . shellescape(GetVisualSelection()) . '| pbcopy')
endfunction

function! GetVisualSelection()
  let [line_start, column_start] = getpos("'<")[1:2]
  let [line_end, column_end] = getpos("'>")[1:2]
  let lines = getline(line_start, line_end)
  if len(lines) == 0
    return ''
  endif
  let lines[-1] = lines[-1][: column_end - 2]
  let lines[0] = lines[0][column_start - 1:]
  return join(lines, "\n")
endfunction


" ~ Marcos Minond
